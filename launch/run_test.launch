<launch>
  <!-- This launch file is responsible for launching all of the necessesary nodes and launch files needed launch and execute a complete test -->

  <!-- Determine whether the robot is physical or simulated-->
  <arg name="sim" default="true" />

  <!-- If in sim, enable gazebo gui or not -->
  <arg name="gui" default="true" />

  <!-- Launch in either navigate mode or mapping mode -->
  <arg name="navigate" default="true" />

  <!-- Use 3d or 2d navigation -->
  <arg name="3d" default="true" />

  <!-- Use the static global map while navigating -->
  <arg name="static_map" default="true" />

  <!-- Type of robot being spawned in -->
  <arg name="robot" default="pioneer" />

  <!-- Define map settings, values are set in the level launch files-->
  <arg name="world_name" />
  <arg name="world_path" />

  <!-- Determine whether an obstacle robot should be spawned in -->
  <arg name="obstacle_bot" default="false" />

  <!-- Determine whether a dynamic obstacle should be spawned in -->
  <arg name="dynamic_obstacle" default="false" />

  <!-- Name of dynamic obstacle that will be spawned in if needed -->
  <arg name="obstacle_name" default="caution_100cm_block" />

  <!-- Flip obstacle spawner -->
  <arg name="flip_obstacle" default="true" />

  <!-- delay for start_test to start -->
  <arg name="start_test_delay" value="15.0" />

  <!-- number of iterations the robot will perform -->
  <arg name="iterations" default="1" />

  <!-- toggle whether the robot should clear the costmaps in between iterations -->
  <arg name="clear_costmaps" default="true" />

  <!-- Set up the test -->
  <include file="$(find uml_hri_nerve_navigation)/launch/setup_test.launch">
    <arg name="sim" value="$(arg sim)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="navigate" value="$(arg navigate)" />
    <arg name="3d" value="$(arg 3d)" />
    <arg name="static_map" value="$(arg static_map)" />
    <arg name="robot" value="$(arg robot)" />
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="world_path" value="$(arg world_path)" />
    <arg name="obstacle_bot" value="$(arg obstacle_bot)" />
    <arg name="dynamic_obstacle" value="$(arg dynamic_obstacle)" />
    <arg name="obstacle_name" value="$(arg obstacle_name)" />
    <arg name="flip_obstacle" value="$(arg flip_obstacle)" />
  </include>

  <!-- Start moving-->
  <node name="mover_node" pkg="uml_hri_nerve_navigation" type="mover_node" output="screen" required="true" launch-prefix="bash -c 'sleep $(arg start_test_delay); $0 $@' ">
    <param name="iterations" value="$(arg iterations)" />
    <param name="clear_costmaps" value="$(arg clear_costmaps)" />
  </node>

  <!-- Start moving obstacle_bot if present-->
  <node name="obstacle_bot_mover" pkg="uml_hri_nerve_navigation" type="obstacle_bot_node" ns="obstacle_bot" launch-prefix="bash -c 'sleep $(arg start_test_delay); $0 $@' "
        if="$(arg obstacle_bot)" />

</launch>